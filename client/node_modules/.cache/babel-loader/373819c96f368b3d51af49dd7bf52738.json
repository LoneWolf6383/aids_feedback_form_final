{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nlet warnedOnce = false;\n\nconst warn = () => {\n  if (!warnedOnce) {\n    console.warn(['MUI: The DesktopDateRangePicker component was moved from `@mui/lab` to `@mui/x-date-pickers-pro`', '', \"You should use `import { DesktopDateRangePicker } from '@mui/x-date-pickers-pro'`\", \"or `import { DesktopDateRangePicker } from '@mui/x-date-pickers-pro/DesktopDateRangePicker'`\", '', 'More information about this migration on our blog: https://mui.com/blog/lab-date-pickers-to-mui-x/.'].join('\\n'));\n    warnedOnce = true;\n  }\n};\n/**\r\n * @ignore - do not document.\r\n */\n\n\nconst DesktopDateRangePicker = /*#__PURE__*/React.forwardRef(function DeprecatedDesktopDateRangePicker() {\n  warn();\n  return null;\n});\nprocess.env.NODE_ENV !== \"production\" ? DesktopDateRangePicker.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * @ignore\r\n   */\n  key: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default DesktopDateRangePicker;","map":{"version":3,"names":["React","PropTypes","warnedOnce","warn","console","join","DesktopDateRangePicker","forwardRef","DeprecatedDesktopDateRangePicker","process","env","NODE_ENV","propTypes","key","oneOfType","number","string"],"sources":["C:/Users/namas/OneDrive/Documents/GitHub/aids_feedback_form_final/client/node_modules/@mui/lab/DesktopDateRangePicker/DesktopDateRangePicker.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nlet warnedOnce = false;\r\n\r\nconst warn = () => {\r\n  if (!warnedOnce) {\r\n    console.warn(['MUI: The DesktopDateRangePicker component was moved from `@mui/lab` to `@mui/x-date-pickers-pro`', '', \"You should use `import { DesktopDateRangePicker } from '@mui/x-date-pickers-pro'`\", \"or `import { DesktopDateRangePicker } from '@mui/x-date-pickers-pro/DesktopDateRangePicker'`\", '', 'More information about this migration on our blog: https://mui.com/blog/lab-date-pickers-to-mui-x/.'].join('\\n'));\r\n    warnedOnce = true;\r\n  }\r\n};\r\n\r\n/**\r\n * @ignore - do not document.\r\n */\r\nconst DesktopDateRangePicker = /*#__PURE__*/React.forwardRef(function DeprecatedDesktopDateRangePicker() {\r\n  warn();\r\n  return null;\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? DesktopDateRangePicker.propTypes\r\n/* remove-proptypes */\r\n= {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  key: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\r\n} : void 0;\r\nexport default DesktopDateRangePicker;"],"mappings":"AAAA;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,IAAIC,UAAU,GAAG,KAAjB;;AAEA,MAAMC,IAAI,GAAG,MAAM;EACjB,IAAI,CAACD,UAAL,EAAiB;IACfE,OAAO,CAACD,IAAR,CAAa,CAAC,kGAAD,EAAqG,EAArG,EAAyG,mFAAzG,EAA8L,8FAA9L,EAA8R,EAA9R,EAAkS,qGAAlS,EAAyYE,IAAzY,CAA8Y,IAA9Y,CAAb;IACAH,UAAU,GAAG,IAAb;EACD;AACF,CALD;AAOA;AACA;AACA;;;AACA,MAAMI,sBAAsB,GAAG,aAAaN,KAAK,CAACO,UAAN,CAAiB,SAASC,gCAAT,GAA4C;EACvGL,IAAI;EACJ,OAAO,IAAP;AACD,CAH2C,CAA5C;AAIAM,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCL,sBAAsB,CAACM;AAC/D;AADwC,EAEtC;EACA;EACA;EACA;EACA;;EAEA;AACF;AACA;EACEC,GAAG,EAAEZ,SAAS,CAACa,SAAV,CAAoB,CAACb,SAAS,CAACc,MAAX,EAAmBd,SAAS,CAACe,MAA7B,CAApB;AATL,CAFF,GAYI,KAAK,CAZT;AAaA,eAAeV,sBAAf"},"metadata":{},"sourceType":"module"}