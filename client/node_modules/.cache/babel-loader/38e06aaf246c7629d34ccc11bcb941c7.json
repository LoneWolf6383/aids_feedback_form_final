{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\namas\\\\OneDrive\\\\Documents\\\\GitHub\\\\aids_feedback_form_final\\\\client\\\\src\\\\components\\\\GraphPlot\\\\radarChart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { PolarArea } from 'react-chartjs-2';\nimport { Chart as ChartJS, RadialLinearScale, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(RadialLinearScale, ArcElement, Tooltip, Legend);\nexport const RadarChart = props => {\n  _s();\n\n  const [ratings, setRatings] = useState({});\n  useEffect(() => {\n    const getRatings = async () => {\n      const data = {\n        'username': '20BAD036',\n        'course': 'PYTHON PROGRAMMING'\n      };\n      const res = await axios.post('getRatings', data);\n      setRatings(res.data); // console.log(res.data)\n    };\n\n    getRatings();\n  }, [ratings]);\n  const d = {\n    labels: ['Q1', 'Q2', 'Q3', 'Q4', 'Q5'],\n    datasets: [{\n      label: '# of Votes',\n      data: ratings,\n      backgroundColor: ['rgba(255, 99, 132, 0.5)', 'rgba(54, 162, 235, 0.5)', 'rgba(75, 192, 192, 0.5)', 'rgba(153, 102, 255, 0.5)', 'rgba(255, 159, 64, 0.5)'],\n      borderWidth: 10\n    }]\n  };\n  var options = {\n    legend: {\n      display: false\n    },\n    borderWidth: 10,\n    scale: {\n      ticks: {\n        fontSize: 18,\n        max: 100\n      },\n      gridLines: {\n        lineWidth: 2,\n        color: \"lightgreen\"\n      },\n      pointLabels: {\n        fontSize: 18,\n        fontStyle: \"bold\"\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(PolarArea, {\n    data: d,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 12\n  }, this);\n};\n\n_s(RadarChart, \"zeHQaJVbgS9fdyeICKg+/Q1YdPk=\");\n\n_c = RadarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"RadarChart\");","map":{"version":3,"names":["React","useState","useEffect","axios","PolarArea","Chart","ChartJS","RadialLinearScale","ArcElement","Tooltip","Legend","register","RadarChart","props","ratings","setRatings","getRatings","data","res","post","d","labels","datasets","label","backgroundColor","borderWidth","options","legend","display","scale","ticks","fontSize","max","gridLines","lineWidth","color","pointLabels","fontStyle"],"sources":["C:/Users/namas/OneDrive/Documents/GitHub/aids_feedback_form_final/client/src/components/GraphPlot/radarChart.jsx"],"sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport axios from 'axios';\r\nimport { PolarArea } from 'react-chartjs-2';\r\nimport {\r\n    Chart as ChartJS,\r\n    RadialLinearScale,\r\n    ArcElement,\r\n    Tooltip,\r\n    Legend,\r\n  } from 'chart.js';\r\nChartJS.register(RadialLinearScale, ArcElement, Tooltip, Legend);\r\n\r\nexport const RadarChart = (props) => {\r\n    const [ratings, setRatings] = useState({})\r\n    useEffect(() => {\r\n        const getRatings = async () => {\r\n            const data = { 'username': '20BAD036', 'course': 'PYTHON PROGRAMMING' }\r\n            const res = await axios.post('getRatings', data)\r\n            setRatings(res.data)\r\n            // console.log(res.data)\r\n        }\r\n        getRatings()\r\n    }, [ratings])\r\n    const d = {\r\n        labels: ['Q1','Q2','Q3','Q4','Q5'],\r\n        datasets: [\r\n            {\r\n            label: '# of Votes',\r\n            data: ratings,\r\n            backgroundColor: [\r\n                'rgba(255, 99, 132, 0.5)',\r\n                'rgba(54, 162, 235, 0.5)',\r\n                'rgba(75, 192, 192, 0.5)',\r\n                'rgba(153, 102, 255, 0.5)',\r\n                'rgba(255, 159, 64, 0.5)'\r\n            ],\r\n            borderWidth: 10 ,\r\n            },\r\n            ],\r\n    }\r\n    var options = {\r\n            legend: {\r\n                display: false\r\n            },\r\n            borderWidth: 10,\r\n            scale: {\r\n                ticks: {\r\n                    fontSize: 18,\r\n                    max: 100\r\n                },\r\n                gridLines: {\r\n                    lineWidth: 2,\r\n                    color: \"lightgreen\"\r\n                },\r\n                pointLabels: {\r\n                    fontSize: 18,\r\n                    fontStyle: \"bold\"\r\n                }\r\n            }\r\n        }\r\n    return <PolarArea data={d} options={options}/>\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SACIC,KAAK,IAAIC,OADb,EAEIC,iBAFJ,EAGIC,UAHJ,EAIIC,OAJJ,EAKIC,MALJ,QAMS,UANT;;AAOAJ,OAAO,CAACK,QAAR,CAAiBJ,iBAAjB,EAAoCC,UAApC,EAAgDC,OAAhD,EAAyDC,MAAzD;AAEA,OAAO,MAAME,UAAU,GAAIC,KAAD,IAAW;EAAA;;EACjC,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;EACAC,SAAS,CAAC,MAAM;IACZ,MAAMc,UAAU,GAAG,YAAY;MAC3B,MAAMC,IAAI,GAAG;QAAE,YAAY,UAAd;QAA0B,UAAU;MAApC,CAAb;MACA,MAAMC,GAAG,GAAG,MAAMf,KAAK,CAACgB,IAAN,CAAW,YAAX,EAAyBF,IAAzB,CAAlB;MACAF,UAAU,CAACG,GAAG,CAACD,IAAL,CAAV,CAH2B,CAI3B;IACH,CALD;;IAMAD,UAAU;EACb,CARQ,EAQN,CAACF,OAAD,CARM,CAAT;EASA,MAAMM,CAAC,GAAG;IACNC,MAAM,EAAE,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,EAAgB,IAAhB,EAAqB,IAArB,CADF;IAENC,QAAQ,EAAE,CACN;MACAC,KAAK,EAAE,YADP;MAEAN,IAAI,EAAEH,OAFN;MAGAU,eAAe,EAAE,CACb,yBADa,EAEb,yBAFa,EAGb,yBAHa,EAIb,0BAJa,EAKb,yBALa,CAHjB;MAUAC,WAAW,EAAE;IAVb,CADM;EAFJ,CAAV;EAiBA,IAAIC,OAAO,GAAG;IACNC,MAAM,EAAE;MACJC,OAAO,EAAE;IADL,CADF;IAINH,WAAW,EAAE,EAJP;IAKNI,KAAK,EAAE;MACHC,KAAK,EAAE;QACHC,QAAQ,EAAE,EADP;QAEHC,GAAG,EAAE;MAFF,CADJ;MAKHC,SAAS,EAAE;QACPC,SAAS,EAAE,CADJ;QAEPC,KAAK,EAAE;MAFA,CALR;MASHC,WAAW,EAAE;QACTL,QAAQ,EAAE,EADD;QAETM,SAAS,EAAE;MAFF;IATV;EALD,CAAd;EAoBA,oBAAO,QAAC,SAAD;IAAW,IAAI,EAAEjB,CAAjB;IAAoB,OAAO,EAAEM;EAA7B;IAAA;IAAA;IAAA;EAAA,QAAP;AACH,CAjDM;;GAAMd,U;;KAAAA,U"},"metadata":{},"sourceType":"module"}